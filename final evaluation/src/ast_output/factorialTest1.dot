digraph G {
0 [label="Program"];
0 -> 1;
1[label="Include Stdio.h"];
0 -> 2;
2 [label="Function"];
 2->3;
3 [label = "DeclSpec:
int"];
2->4;
4[label="Identifier:
multiplyNumbers"];
2->5;
5 [label="ParamList"];
5->6;
6 [label = "ParamDecl"];
6->7;
7 [label = "DeclSpec:
int"];
6->8;
8[label="Identifier:
n"];
2->9;
9[ label = "body"];
9->10;
10 [label = "Branch"];
10->11;
10->12;
11 [label = "condition"];
12 [label = "ifBody"];
11->13;
13 [label = "BinaryOperation:>="];
13->14;
14[label="Identifier:
n"];
13->15;
15[label="Integer:
 1"];
12->16;
16[label="return"];
16->25;
25 [label = "BinaryOperation:*"];
25->26;
26[label="Identifier:
n"];
25->27;
27 [ label = "FunctionCall"];
27->28;
28[label="Identifier:
multiplyNumbers"];
27->29;
29 [ label = "ArgExprList"];
29->30;
30 [label = "BinaryOperation:-"];
30->31;
31[label="Identifier:
n"];
30->32;
32[label="Integer:
 1"];
9->33;
33[label="return"];
33->35;
35[label="Integer:
 1"];
0 -> 36;
36 [label="Function"];
 36->37;
37 [label = "DeclSpec:
int"];
36->38;
38[label="Identifier:
main"];
36->39;
39[ label = "body"];
39->40;
40 [label="Decl" ];
40->41;
41 [label = "DeclSpec:
int"];
40->42;
42[label="Identifier:
n"];
39->44;
44 [ label = "FunctionCall"];
44->45;
45[label="Identifier:
printf"];
44->46;
46 [ label = "ArgExprList"];
46->47;
47[label="CString:
 Enter a integer: "];
39->49;
49 [ label = "FunctionCall"];
49->50;
50[label="Identifier:
scanf"];
49->51;
51 [ label = "ArgExprList"];
51->52;
52[label="CString:
 %d"];
51->53;
53 [ label = "ReferenceExpression:
"];
53->54;
54[label="Identifier:
n"];
39->55;
55 [label = "Branch"];
55->56;
55->57;
56 [label = "condition"];
57 [label = "ifBody"];
56->58;
58 [label = "BinaryOperation:<"];
58->59;
59[label="Identifier:
n"];
58->60;
60[label="Integer:
 0"];
57->62;
62 [ label = "FunctionCall"];
62->63;
63[label="Identifier:
printf"];
62->64;
64 [ label = "ArgExprList"];
64->65;
65[label="CString:
 Factorial of negative number doesn't exist\n"];
64->66;
66[label="Identifier:
n"];
57->67;
67[label="return"];
39->68;
68 [label="Decl" ];
68->69;
69 [label = "DeclSpec:
int"];
68->70;
70[label="Identifier:
fact"];
68->71;
71 [ label = "FunctionCall"];
71->72;
72[label="Identifier:
multiplyNumbers"];
71->73;
73 [ label = "ArgExprList"];
73->74;
74[label="Identifier:
n"];
39->76;
76 [ label = "FunctionCall"];
76->77;
77[label="Identifier:
printf"];
76->78;
78 [ label = "ArgExprList"];
78->79;
79[label="CString:
 Factorial of %d = %d"];
78->80;
80[label="Identifier:
n"];
78->81;
81[label="Identifier:
fact"];
39->82;
82[label="return"];
82->84;
84[label="Integer:
 0"];
}